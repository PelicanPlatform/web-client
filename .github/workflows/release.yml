name: Publish to npm

on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*.*-beta.*'

permissions:
  contents: write
  actions: write

jobs:
  pre-release:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.extract_tag.outputs.tag }}
    steps:

      - name: Set Branch
        id: set_branch
        run: |
          echo "branch=${GITHUB_REF_NAME%.*}.x" >> $GITHUB_OUTPUT
          echo "Branch set to: ${GITHUB_REF_NAME%.*}.x"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ steps.set_branch.outputs.branch }}
          continue-on-error: true
      - name: Check Branch Checkout
        run: |
          echo: "Current branch: $(git branch)"
          echo "Git status: $(git status)"
          echo "Git log: $(git log -1)"

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Update npm version
        run: |
          cd web_ui/frontend
          echo "Current directory: $(pwd)"
          echo "Directory contents: $(ls -la)
          # Get the current tag and set the package.json version to it
          npm version ${GITHUB_REF_NAME:1}

          # Add some verbosity
          echo "NPM version is now $(npm version)"

      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Pre Release: Update npm version"
          branch: ${{ steps.set_branch.outputs.branch }}

      - name: Reset the tag to the newest commit
        run: |

          # Delete the previous tag
          git tag --delete ${GITHUB_REF_NAME}
          git push origin :refs/tags/${GITHUB_REF_NAME}

          # Create and push the new tag
          git tag ${GITHUB_REF_NAME}
          git push origin --tags

      - name: Extract tag name
        id: extract_tag
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"

  publish:
    needs: [pre-release]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: |
          echo "Current directory: $(pwd)"
          echo "Directory contents: $(ls -la)"
          npm install

      - name: Publish to npm
        run: |
          echo "Publishing package..."
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      
