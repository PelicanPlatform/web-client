name: Publish to npm

on:
  push:
    tags:
      - '*.*.*'
      - '*.*.*-beta.*'

permissions:
  contents: write
  actions: write

jobs:
  pre-release:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.extract_tag.outputs.tag }}
    steps:

      - name: Set branch
        id: set_branch
        run: |
          echo "branch=${GITHUB_REF_NAME%.*}.x" >> $GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}
          
      - name: Check Branch Checkout
        run: |
          echo "Current branch: $(git rev-parse --abbrev-ref HEAD)"
          echo "Git status: $(git status)"
          echo "Git log: $(git log -1)"
          
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Set up Git user
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          
      - name: Update npm version
        run: |
          echo "Current directory: $(pwd)"
          echo "Directory contents: $(ls -la)"
          # Get the current tag and set the package.json version to it
          npm version ${GITHUB_REF_NAME:1} --no-git-tag-version
          # Add some verbosity
          echo "NPM version is now $(npm version)"
          
      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Pre Release: Update npm version"
          file_pattern: "."
          branch: ${{ GITHUB_REF }}
          create_branch: true
          

      - name: Push changes to the branch
        run: |
          git push origin HEAD:${GITHUB_REF#refs/heads/}
          
      - name: Reset the tag to the newest commit
        run: |
          # Delete the previous tag
          git tag --delete ${GITHUB_REF_NAME}
          git push origin :refs/tags/${GITHUB_REF_NAME}
          
          # Create and push the new tag
          git tag ${GITHUB_REF_NAME}
          git push origin --tags
          
      - name: Extract tag name
        id: extract_tag
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"
